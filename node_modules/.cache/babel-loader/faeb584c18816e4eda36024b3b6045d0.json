{"ast":null,"code":"import faker from \"faker\";\nimport { times } from \"lodash\";\nimport { createServer } from \"miragejs\";\nconst states = new Set(times(10, n => {\n  return faker.address.state();\n}));\nstates.add(\"Georgia\");\nconst cities = times(10, n => {\n  return faker.address.city();\n});\nconst types = [\"Apartment\", \"Single-family\", \"Townhomes\", \"Condo\"];\nconst mockData = Array.from({\n  length: 200\n}, (_, i) => ({\n  id: i + 1,\n  state: faker.random.arrayElement(Array.from(states)),\n  city: faker.random.arrayElement(cities),\n  type: faker.random.arrayElement(types),\n  price: faker.datatype.number({\n    min: 500,\n    max: 1500,\n    precision: 2\n  })\n}));\ncreateServer({\n  routes() {\n    this.namespace = \"api\";\n    this.timing = 2000;\n    this.get(\"/properties\", () => {\n      return {\n        data: mockData\n      };\n    });\n  }\n\n});","map":{"version":3,"sources":["/Users/hanfour/Documents/test/src/mock.js"],"names":["faker","times","createServer","states","Set","n","address","state","add","cities","city","types","mockData","Array","from","length","_","i","id","random","arrayElement","type","price","datatype","number","min","max","precision","routes","namespace","timing","get","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,MAAMC,MAAM,GAAG,IAAIC,GAAJ,CACbH,KAAK,CAAC,EAAD,EAAMI,CAAD,IAAO;AACf,SAAOL,KAAK,CAACM,OAAN,CAAcC,KAAd,EAAP;AACD,CAFI,CADQ,CAAf;AAMAJ,MAAM,CAACK,GAAP,CAAW,SAAX;AAEA,MAAMC,MAAM,GAAGR,KAAK,CAAC,EAAD,EAAMI,CAAD,IAAO;AAC9B,SAAOL,KAAK,CAACM,OAAN,CAAcI,IAAd,EAAP;AACD,CAFmB,CAApB;AAIA,MAAMC,KAAK,GAAG,CAAC,WAAD,EAAc,eAAd,EAA+B,WAA/B,EAA4C,OAA5C,CAAd;AAEA,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAX,EAA4B,CAACC,CAAD,EAAIC,CAAJ,MAAW;AACtDC,EAAAA,EAAE,EAAED,CAAC,GAAG,CAD8C;AAEtDV,EAAAA,KAAK,EAAEP,KAAK,CAACmB,MAAN,CAAaC,YAAb,CAA0BP,KAAK,CAACC,IAAN,CAAWX,MAAX,CAA1B,CAF+C;AAGtDO,EAAAA,IAAI,EAAEV,KAAK,CAACmB,MAAN,CAAaC,YAAb,CAA0BX,MAA1B,CAHgD;AAItDY,EAAAA,IAAI,EAAErB,KAAK,CAACmB,MAAN,CAAaC,YAAb,CAA0BT,KAA1B,CAJgD;AAKtDW,EAAAA,KAAK,EAAEtB,KAAK,CAACuB,QAAN,CAAeC,MAAf,CAAsB;AAAEC,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,GAAG,EAAE,IAAjB;AAAuBC,IAAAA,SAAS,EAAE;AAAlC,GAAtB;AAL+C,CAAX,CAA5B,CAAjB;AAQAzB,YAAY,CAAC;AACX0B,EAAAA,MAAM,GAAG;AACP,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,GAAL,CAAS,aAAT,EAAwB,MAAM;AAC5B,aAAO;AAAEC,QAAAA,IAAI,EAAEpB;AAAR,OAAP;AACD,KAFD;AAGD;;AAPU,CAAD,CAAZ","sourcesContent":["import faker from \"faker\";\nimport { times } from \"lodash\";\nimport { createServer } from \"miragejs\";\n\nconst states = new Set(\n  times(10, (n) => {\n    return faker.address.state();\n  })\n);\n\nstates.add(\"Georgia\");\n\nconst cities = times(10, (n) => {\n  return faker.address.city();\n});\n\nconst types = [\"Apartment\", \"Single-family\", \"Townhomes\", \"Condo\"];\n\nconst mockData = Array.from({ length: 200 }, (_, i) => ({\n  id: i + 1,\n  state: faker.random.arrayElement(Array.from(states)),\n  city: faker.random.arrayElement(cities),\n  type: faker.random.arrayElement(types),\n  price: faker.datatype.number({ min: 500, max: 1500, precision: 2 })\n}));\n\ncreateServer({\n  routes() {\n    this.namespace = \"api\";\n    this.timing = 2000;\n    this.get(\"/properties\", () => {\n      return { data: mockData };\n    });\n  }\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hanfour/Documents/test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport \"./mock\";\nimport * as Ant from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [datasource, setDataSource] = React.useState();\n  const [isLoading, setIsLoading] = React.useState(true);\n  React.useEffect(() => {\n    fetch(\"/api/properties\").then(res => res.json()).then(result => {\n      console.log(result);\n      setDataSource(result); // setIsLoading(false);\n    }, error => {\n      console.log(error);\n      setIsLoading(false);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Ant.Spin, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ant.Table, {\n      dataSource: true,\n      columns: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"s0Lmyy7U/nyBX2Bqc5fPE7+dsA4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hanfour/Documents/test/src/App.js"],"names":["React","Ant","App","datasource","setDataSource","useState","isLoading","setIsLoading","useEffect","fetch","then","res","json","result","console","log","error"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,QAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,MAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,KAAK,CAACK,QAAN,EAApC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,KAAK,CAACK,QAAN,CAAe,IAAf,CAAlC;AAEAL,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAT,MAAAA,aAAa,CAACS,MAAD,CAAb,CAFU,CAGV;AACD,KAPL,EAQKG,KAAD,IAAW;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAXL;AAaD,GAdD;AAiBA,sBACE;AAAA,eACCD,SAAS,iBACR,QAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAIA,QAAC,GAAD,CAAK,KAAL;AAAW,MAAA,UAAU,MAArB;AAAsB,MAAA,OAAO;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADF;AAQD;;GA7BQJ,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["import * as React from \"react\";\nimport \"./mock\";\nimport * as Ant from \"antd\";\n\nfunction App() {\n  const [datasource, setDataSource] = React.useState();\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    fetch(\"/api/properties\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          setDataSource(result);\n          // setIsLoading(false);\n        },\n        (error) => {\n          console.log(error);\n          setIsLoading(false);\n        }\n      )\n  });\n\n\n  return (\n    <>\n    {isLoading &&\n      <Ant.Spin size=\"large\"/>\n    }\n    <Ant.Table dataSource columns/>\n    </>\n  );\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
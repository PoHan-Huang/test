[{"/Users/hanfour/Documents/test/src/index.js":"1","/Users/hanfour/Documents/test/src/App.js":"2","/Users/hanfour/Documents/test/src/reportWebVitals.js":"3","/Users/hanfour/Documents/test/src/mock.js":"4"},{"size":500,"mtime":1625472593632,"results":"5","hashOfConfig":"6"},{"size":1785,"mtime":1625476345929,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1625472219730,"results":"8","hashOfConfig":"6"},{"size":805,"mtime":1625472449133,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"bd6ktv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/hanfour/Documents/test/src/index.js",[],["19","20"],"/Users/hanfour/Documents/test/src/App.js",["21","22","23","24"],"/Users/hanfour/Documents/test/src/reportWebVitals.js",[],"/Users/hanfour/Documents/test/src/mock.js",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":7,"column":22,"nodeType":"31","messageId":"32","endLine":7,"endColumn":35},{"ruleId":"29","severity":1,"message":"33","line":50,"column":15,"nodeType":"31","messageId":"32","endLine":50,"endColumn":18},{"ruleId":"34","severity":1,"message":"35","line":50,"column":49,"nodeType":"36","messageId":"37","endLine":50,"endColumn":51},{"ruleId":"34","severity":1,"message":"35","line":53,"column":25,"nodeType":"36","messageId":"37","endLine":53,"endColumn":27},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'setDataSource' is assigned a value but never used.","Identifier","unusedVar","'map' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]